import * as React from "react";
import Joyride, { Step, Placement } from "react-joyride";

export interface WalkthroughProps {
  type: "game" | "config";
  playerType: "PC" | "Host";
}

export interface WalkthroughState {}

class Walkthrough extends React.Component<WalkthroughProps, WalkthroughState> {
  diffTypeSteps: {
    config: { PC: Step[]; Host: Step[] };
    game: { PC: Step[]; Host: Step[] };
  };
  constructor(props: WalkthroughProps) {
    super(props);
    let configHostSteps: Step[] = [
      {
        target: ".ready-players-container",
        content:
          "You will see the status of other players here with whom you have shared the link.",
        disableBeacon: true,
      },
      {
        target: ".start-game",
        content:
          "You can click this button after finishing this tutorial. This will start the game with players who are ready in the game",
        disableBeacon: true,
        spotlightClicks: false,
      },
    ];

    let ConfigPCSteps: Step[] = [
      {
        target: ".ready-players-container",
        content:
          "You will see the status of other players here with whom you have shared the link.",
        disableBeacon: true,
      },
      {
        target:
          "#pc-config-table > tbody > tr:nth-child(1) > td:nth-child(2) > input[type=number]",
        content: "Select the number of tickets you want to play with.",
        disableBeacon: true,
      },
      {
        target: "button.ready",
        content:
          "Click this button when you have selected the number of tickets you want to play with. All other players will know that you are 'Ready and how many tickets are you going to play with'",

        disableBeacon: true,
      },
    ];

    let bottom: Placement = "bottom";
    let gameHostSteps = [
      {
        target: ".new-number",
        content:
          "Clicking this will generate a new number which will be displayed on every player's screen",
        disableBeacon: true,
      },
      {
        target: "table.prizes",
        content:
          "The Awards' status will be displayed here. It shows what awards and how many of them are left and who won them",
        disableBeacon: true,
      },
    ];

    let gamePCSteps = [
      {
        target: ".new-number-player-container",
        content:
          "The new number generated by the host in the game will be shown here",
        disableBeacon: true,
      },
      {
        target: "#gone-numbers-button",
        content:
          "In case you miss any number, you can click this button to check the numbers which are already gone.",
        disableBeacon: true,
      },
      {
        target: "#ticket-board-container",
        content:
          "This is your ticket. You mark the numbers here in your ticket if they get generated in the game",
        disableBeacon: true,
      },
      {
        target: ".winning-buttons",
        content:
          "If you think you won some award, you click the respective award button and then your ticket will be sent to host and he will check if you really won the award or it is a boggie!",
        disableBeacon: true,
      },
      {
        target: "table.prizes",
        content:
          "The Awards' status will be displayed here. It shows what awards and how many of them are left and who won them",
        disableBeacon: true,
      },
    ];

    this.diffTypeSteps = {
      config: { PC: ConfigPCSteps, Host: configHostSteps },
      game: { PC: gamePCSteps, Host: gameHostSteps },
    };
  }

  render() {
    let playerType = this.props.playerType;
    let tutorialType = this.props.type;
    const steps = this.diffTypeSteps[tutorialType][playerType];
    return (
      <>
        <Joyride
          steps={steps}
          run={true}
          continuous={true}
          disableOverlayClose={true}
          showProgress={true}
          showSkipButton={true}
          spotlightClicks={true}
          styles={{
            options: {
              zIndex: 10000,
              primaryColor: "#0e141f",
              textColor: "#0e141f",
            },
          }}
        />
      </>
    );
  }
}

export default Walkthrough;
